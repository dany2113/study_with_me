
# region üìö –®–ø–∞—Ä–≥–∞–ª–∫–∞ –ï–ì–≠ | –ó–∞–¥–∞–Ω–∏–µ ‚Ññ25

# –ó–∞–¥–∞–Ω–∏–µ ‚Ññ1:
# –ù–∞–ø–∏—à–∏—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É, –∫–æ—Ç–æ—Ä–∞—è –∏—â–µ—Ç —Å—Ä–µ–¥–∏ —Ü–µ–ª—ã—Ö —á–∏—Å–µ–ª, –ø—Ä–∏–Ω–∞–¥–ª–µ–∂–∞—â–∏—Ö —á–∏—Å–ª–æ–≤–æ–º—É –æ—Ç—Ä–µ–∑–∫—É [174457;174505], —á–∏—Å–ª–∞,
# –∏–º–µ—é—â–∏–µ —Ä–æ–≤–Ω–æ –¥–≤–∞ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –Ω–∞—Ç—É—Ä–∞–ª—å–Ω—ã—Ö –¥–µ–ª–∏—Ç–µ–ª—è, –Ω–µ —Å—á–∏—Ç–∞—è –µ–¥–∏–Ω–∏—Ü—ã –∏ —Å–∞–º–æ–≥–æ —á–∏—Å–ª–∞.
# –î–ª—è –∫–∞–∂–¥–æ–≥–æ –Ω–∞–π–¥–µ–Ω–Ω–æ–≥–æ —á–∏—Å–ª–∞ –∑–∞–ø–∏—à–∏—Ç–µ —ç—Ç–∏ –¥–≤–∞ –¥–µ–ª–∏—Ç–µ–ª—è –≤ –¥–≤–∞ —Å–æ—Å–µ–¥–Ω–∏—Ö —Å—Ç–æ–ª–±—Ü–∞ –Ω–∞ —ç–∫—Ä–∞–Ω–µ —Å –Ω–æ–≤–æ–π —Å—Ç—Ä–æ–∫–∏
# –≤ –ø–æ—Ä—è–¥–∫–µ –≤–æ–∑—Ä–∞—Å—Ç–∞–Ω–∏—è –ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è —ç—Ç–∏—Ö –¥–≤—É—Ö –¥–µ–ª–∏—Ç–µ–ª–µ–π.
# –î–µ–ª–∏—Ç–µ–ª–∏ –≤ —Å—Ç—Ä–æ–∫–µ —Ç–∞–∫–∂–µ –¥–æ–ª–∂–Ω—ã —Å–ª–µ–¥–æ–≤–∞—Ç—å –≤ –ø–æ—Ä—è–¥–∫–µ –≤–æ–∑—Ä–∞—Å—Ç–∞–Ω–∏—è.

# –†–µ—à–µ–Ω–∏–µ:
'''
d = Divisors(x) - –Ω–∞—Ö–æ–¥—è—Ç—Å—è –ø—Ä–æ—Å—Ç—ã–µ –¥–µ–ª–∏—Ç–µ–ª–∏ —á–∏—Å–ª–∞ x.
if len(d) == 2: - –ø—Ä–æ–≤–µ—Ä—è–µ—Ç—Å—è, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–æ—Å—Ç—ã—Ö –¥–µ–ª–∏—Ç–µ–ª–µ–π —á–∏—Å–ª–∞ x —Ä–∞–≤–Ω—ã–º 2 (—Å–∞–º–æ —á–∏—Å–ª–æ –∏ 1).
print(*d) - –≤—ã–≤–æ–¥—è—Ç—Å—è –ø—Ä–æ—Å—Ç—ã–µ –¥–µ–ª–∏—Ç–µ–ª–∏ —á–∏—Å–ª–∞ x, –µ—Å–ª–∏ —á–∏—Å–ª–æ –∏–º–µ–µ—Ç —Ä–æ–≤–Ω–æ –¥–≤–∞ –ø—Ä–æ—Å—Ç—ã—Ö –¥–µ–ª–∏—Ç–µ–ª—è.
def Divisors(x):
    div = []
    for j in range(2, int(x ** 0.5) + 1):  # 2 - –Ω–µ —Å—á–∏—Ç–∞—è –µ–¥–∏–Ω–∏—Ü—ã –∏ —Å–∞–º–æ–≥–æ —á–∏—Å–ª–∞.
        if x % j == 0:
            div += [j, x // j]
    return sorted(set(div))

for x in range(174457, 174505 + 1):
    d = Divisors(x)
    if len(d) == 2:
        print(*d)
'''


# –ó–∞–¥–∞–Ω–∏–µ ‚Ññ2:
# –ù–∞–ø–∏—à–∏—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É, –∫–æ—Ç–æ—Ä–∞—è –∏—â–µ—Ç —Å—Ä–µ–¥–∏ —Ü–µ–ª—ã—Ö —á–∏—Å–µ–ª, –ø—Ä–∏–Ω–∞–¥–ª–µ–∂–∞—â–∏—Ö —á–∏—Å–ª–æ–≤–æ–º—É –æ—Ç—Ä–µ–∑–∫—É [95632;95650], —á–∏—Å–ª–∞,
# –∏–º–µ—é—â–∏–µ —Ä–æ–≤–Ω–æ —à–µ—Å—Ç—å —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –Ω–µ—á—ë—Ç–Ω—ã—Ö –Ω–∞—Ç—É—Ä–∞–ª—å–Ω—ã—Ö –¥–µ–ª–∏—Ç–µ–ª–µ–π (–ø—Ä–∏ —ç—Ç–æ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —á–µ—Ç–Ω—ã—Ö –¥–µ–ª–∏—Ç–µ–ª–µ–π –º–æ–∂–µ—Ç –±—ã—Ç—å –ª—é–±—ã–º).
# –î–ª—è –∫–∞–∂–¥–æ–≥–æ –Ω–∞–π–¥–µ–Ω–Ω–æ–≥–æ —á–∏—Å–ª–∞ –∑–∞–ø–∏—à–∏—Ç–µ —ç—Ç–∏ —à–µ—Å—Ç—å –¥–µ–ª–∏—Ç–µ–ª–µ–π –≤ —à–µ—Å—Ç—å —Å–æ—Å–µ–¥–Ω–∏—Ö —Å—Ç–æ–ª–±—Ü–æ–≤ –Ω–∞ —ç–∫—Ä–∞–Ω–µ —Å –Ω–æ–≤–æ–π —Å—Ç—Ä–æ–∫–∏.
# –î–µ–ª–∏—Ç–µ–ª–∏ –≤ —Å—Ç—Ä–æ–∫–µ –¥–æ–ª–∂–Ω—ã —Å–ª–µ–¥–æ–≤–∞—Ç—å –≤ –ø–æ—Ä—è–¥–∫–µ –≤–æ–∑—Ä–∞—Å—Ç–∞–Ω–∏—è.

# –†–µ—à–µ–Ω–∏–µ:
'''
def Divisors(x):
    div = []
    for j in range(1, int(x ** 0.5) + 1):
        if x % j == 0:
            div += [j, x // j]
    return sorted(set(div))

for x in range(95632, 95650 + 1):
    d = Divisors(x)
    if len(d) == 6:
        print(*d)
'''


# –ó–∞–¥–∞–Ω–∏–µ ‚Ññ3:
# –Ω–∞–∑–æ–≤—ë–º –º–∞—Å–∫–æ–π —á–∏—Å–ª–∞ –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å —Ü–∏—Ñ—Ä, –≤ –∫–æ—Ç–æ—Ä–æ–π —Ç–∞–∫–∂–µ –º–æ–≥—É—Ç –≤—Å—Ç—Ä–µ—á–∞—Ç—å—Å—è —Å–ª–µ–¥—É—é—â–∏–µ —Å–∏–º–≤–æ–ª—ã:
# —Å–∏–º–≤–æ–ª ¬´?¬ª –æ–∑–Ω–∞—á–∞–µ—Ç —Ä–æ–≤–Ω–æ –æ–¥–Ω—É –ø—Ä–æ–∏–∑–≤–æ–ª—å–Ω—É—é —Ü–∏—Ñ—Ä—É;
# —Å–∏–º–≤–æ–ª ¬´*¬ª –æ–∑–Ω–∞—á–∞–µ—Ç –ª—é–±—É—é –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å —Ü–∏—Ñ—Ä –ø—Ä–æ–∏–∑–≤–æ–ª—å–Ω–æ–π –¥–ª–∏–Ω—ã;
# –≤ —Ç–æ–º —á–∏—Å–ª–µ ¬´*¬ª –º–æ–∂–µ—Ç –∑–∞–¥–∞–≤–∞—Ç—å –∏ –ø—É—Å—Ç—É—é –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å.
# –°—Ä–µ–¥–∏ –Ω–∞—Ç—É—Ä–∞–ª—å–Ω—ã—Ö —á–∏—Å–µ–ª, –Ω–µ –ø—Ä–µ–≤—ã—à–∞—é—â–∏—Ö 10**9, –Ω–∞–π–¥–∏—Ç–µ –≤—Å–µ —á–∏—Å–ª–∞,
# —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–µ –º–∞—Å–∫–µ 12345?7?8, –¥–µ–ª—è—â–∏–µ—Å—è –Ω–∞ —á–∏—Å–ª–æ 23 –±–µ–∑ –æ—Å—Ç–∞—Ç–∫–∞.
#
# –í –æ—Ç–≤–µ—Ç–µ –∑–∞–ø–∏—à–∏—Ç–µ –≤ –ø–µ—Ä–≤–æ–º —Å—Ç–æ–ª–±—Ü–µ —Ç–∞–±–ª–∏—Ü—ã –≤—Å–µ –Ω–∞–π–¥–µ–Ω–Ω—ã–µ —á–∏—Å–ª–∞ –≤ –ø–æ—Ä—è–¥–∫–µ –≤–æ–∑—Ä–∞—Å—Ç–∞–Ω–∏—è,
# –∞ –≤–æ –≤—Ç–æ—Ä–æ–º —Å—Ç–æ–ª–±—Ü–µ ‚Äî —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–µ –∏–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –¥–µ–ª–µ–Ω–∏—è —ç—Ç–∏—Ö —á–∏—Å–µ–ª –Ω–∞ 23.

# –†–µ—à–µ–Ω–∏–µ:
'''
from fnmatch import *

for x in range(23, 10 ** 9, 23):
    if fnmatch(str(x), '12345?7?8'):
        print(x, x//23)
'''


# –ó–∞–¥–∞–Ω–∏–µ ‚Ññ4:
# –ù–∞–∑–æ–≤—ë–º –º–∞—Å–∫–æ–π —á–∏—Å–ª–∞ –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å —Ü–∏—Ñ—Ä, –≤ –∫–æ—Ç–æ—Ä–æ–π —Ç–∞–∫–∂–µ –º–æ–≥—É—Ç –≤—Å—Ç—Ä–µ—á–∞—Ç—å—Å—è —Å–ª–µ–¥—É—é—â–∏–µ —Å–∏–º–≤–æ–ª—ã:
#
# —Å–∏–º–≤–æ–ª ¬´?¬ª –æ–∑–Ω–∞—á–∞–µ—Ç —Ä–æ–≤–Ω–æ –æ–¥–Ω—É –ø—Ä–æ–∏–∑–≤–æ–ª—å–Ω—É—é —Ü–∏—Ñ—Ä—É;
# —Å–∏–º–≤–æ–ª ¬´*¬ª –æ–∑–Ω–∞—á–∞–µ—Ç –ª—é–±—É—é –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å —Ü–∏—Ñ—Ä –ø—Ä–æ–∏–∑–≤–æ–ª—å–Ω–æ–π –¥–ª–∏–Ω—ã;
# –≤ —Ç–æ–º —á–∏—Å–ª–µ ¬´*¬ª –º–æ–∂–µ—Ç –∑–∞–¥–∞–≤–∞—Ç—å –∏ –ø—É—Å—Ç—É—é –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å.
# –ù–∞–ø—Ä–∏–º–µ—Ä, –º–∞—Å–∫–µ 123*4?5 —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—Ç —á–∏—Å–ª–∞ 123405 –∏ 12300425.
# –ù–∞–π–¥–∏—Ç–µ –≤—Å–µ –Ω–∞—Ç—É—Ä–∞–ª—å–Ω—ã–µ —á–∏—Å–ª–∞, –Ω–µ –ø—Ä–µ–≤–æ—Å—Ö–æ–¥—è—â–∏–µ 107, –¥–ª—è –∫–æ—Ç–æ—Ä—ã—Ö –≤—ã–ø–æ–ª–Ω—è—é—Ç—Å—è –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ –≤—Å–µ —É—Å–ª–æ–≤–∏—è:
#
# ‚Äì —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—Ç –º–∞—Å–∫–µ *2?2*;
# ‚Äì —è–≤–ª—è—é—Ç—Å—è –ø–∞–ª–∏–Ω–¥—Ä–æ–º–∞–º–∏;
# ‚Äì –¥–µ–ª—è—Ç—Å—è –Ω–∞ —á–∏—Å–ª–æ 53 –±–µ–∑ –æ—Å—Ç–∞—Ç–∫–∞;
# ‚Äì –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–µ–ª–∏—Ç–µ–ª–µ–π –±–æ–ª—å—à–µ 30.
# –í –æ—Ç–≤–µ—Ç–µ –∑–∞–ø–∏—à–∏—Ç–µ –≤ –ø–µ—Ä–≤–æ–º —Å—Ç–æ–ª–±—Ü–µ —Ç–∞–±–ª–∏—Ü—ã –≤—Å–µ –Ω–∞–π–¥–µ–Ω–Ω—ã–µ —á–∏—Å–ª–∞ –≤ –ø–æ—Ä—è–¥–∫–µ –≤–æ–∑—Ä–∞—Å—Ç–∞–Ω–∏—è,
# –∞ –≤–æ –≤—Ç–æ—Ä–æ–º —Å—Ç–æ–ª–±—Ü–µ ‚Äî —Å—É–º–º—É –¥–µ–ª–∏—Ç–µ–ª–µ–π.

# –†–µ—à–µ–Ω–∏–µ:

# from fnmatch import *
#
# def divisors(x):
#     div = []
#     for j in range(1, int(x**0.5)+1):
#         if x % j == 0:
#             div += [j, x // j]
#     return sorted(set(div))
#
# for x in range(53, 10**7, 53):
#     if fnmatch(str(x), '*2?2*'):
#         if str(x) == str(x)[::-1]:
#             d = divisors(x)
#             if len(d) > 30:
#                 print(x, sum(d))



# üìö –ü–æ–ª–µ–∑–Ω—ã–µ —Å—Å—ã–ª–∫–∏ –Ω–∞ —Å—Ç–∞—Ç—å–∏ –∏ —Ä–∞–∑–±–æ—Ä—ã –∑–∞–¥–∞—á:
# üìò –ü–æ–ª–Ω–∞—è –≤–µ—Ä—Å–∏—è —à–ø–∞—Ä–≥–∞–ª–∫–∏ –¥–æ—Å—Ç—É–ø–Ω–∞ –≤ –Ω–∞—à–µ–º —Ç–≥ –∫–∞–Ω–∞–ª–µ: https://t.me/informatika_kege_itpy/362?comment=1424
# üìò –†–∞–∑–±–æ—Ä—ã 25 –Ω–æ–º–µ—Ä–æ–≤ –ø–æ –∏–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–µ: https://t.me/informatika_kege_itpy/360?comment=2708
# üí°–¶–∏–∫–ª—ã for –∏ while, –∫–∞–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ü–∏–∫–ª—ã –¥–ª—è —Å–¥–∞—á–∏ –ö–ï–ì–≠: https://t.me/informatika_kege_itpy/169
# endregion (–Ω–µ —É–¥–∞–ª—è–π—Ç–µ –º–µ–Ω—è, —è —Ç—É—Ç –Ω–µ –ø—Ä–æ—Å—Ç–æ —Ç–∞–∫)

#
# # todo: —Å—é–¥–∞ –º–æ–∂–Ω–æ –ø–∏—Å–∞—Ç—å –∑–∞–º–µ—Ç–∫–∏, —á—Ç–æ–±—ã –Ω–µ –∑–∞–±—ã—Ç—å –∑–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å —Ä–µ–ø–µ—Ç–∏—Ç–æ—Ä—É ‚òùÔ∏è
# progress_result = ()  # –°—é–¥–∞ –∑–∞–Ω–æ—Å—è—Ç—Å—è –Ω–æ–º–µ—Ä–∞, –ø—Ä–æ—Ä–µ—à–∞–Ω–Ω—ã—Ö –∑–∞–¥–∞—á.
# print('–†–µ–∫–æ–º–µ–Ω–¥—É–µ–º–æ–µ –∫–æ–ª-–≤–æ —Ä–µ—à–µ–Ω–Ω—ã—Ö –∑–∞–¥–∞—á –¥–ª—è –∑–∞–∫—Ä–µ–ø–ª–µ–Ω–∏—è –Ω–æ–º–µ—Ä–∞ 50.')
# print(f'–ü—Ä–æ–≤–µ—Ä–∏–º –ø—Ä–æ–≥—Ä–µ—Å—Å: ~{int(len(progress_result) * (100 / 50))}% –∑–∞–¥–∞—á –ø—Ä–æ—Ä–µ—à–∞–Ω–æ.')


# from math import *
# def f(x):
#     delit = []
#     for i in range(2, isqrt(x)+1):
#         if x % i == 0:
#             delit += [i, x//i]
#     return sorted(set(delit))
#
# cnt = 0
# for x in range(300_000, 10**10):
#     l = 0
#     dev = f(x)
#     if len(dev):
#         for i in dev:
#             if i % 2 != 0:
#                 l += i
#     if l % 10 == 7:
#         cnt += 1
#         print(x, l)
#         if cnt == 5:
#             break

# from math import isqrt
# def f(x):
#     deliteli = []
#     for i in range(2, isqrt(x)+1):
#         if x % i == 0:
#             deliteli += [i, x // i]
#     return sorted(set(deliteli))
#
# cnt = 0
# for x in range(800_000, 10**10):
#     div = f(x)
#     if len(div):
#         M = max(div) + min(div)
#         if M % 10 == 4:
#             cnt += 1
#             print(x, M)
#         if cnt == 5:
#             break

# from fnmatch import *
# for x in range(84318, 10**12, 84318):
#     if fnmatch(str(x), "5*7?"):
#         if len(str(x)) == len(set(str(x))):
#             print(x, x // 84318)

#
# from math import isqrt
# def f(x):
#     deliteli = []
#     for i in range(1, isqrt(x)+1):
#         if x % i == 0:
#             deliteli += [i, x//i]
#     return deliteli
#
# cnt = 0
# for x in range(500_000, 10**12):
#     if cnt == 5: break
#     div = f(x)
#     R = sum(div)
#     if R % 10 == 6:
#         cnt += 1
#         print(x, R)

# from fnmatch import *
# for x in range(7993, 10**10+1, 7993):
#     if fnmatch(str(x), "4*4736*1"):
#         print(x, x // 7993)


# from math import  isqrt
# def f(x):
#     deliteli = sorted(set([]))
#     for i in range(2, isqrt(x)+1):
#         if x % i == 0:
#             deliteli += [i, x//i]
#     l = sorted([n for n in deliteli if n % 10 == 7 and n != x and n != 7])
#     return l
# cnt = 0
# for x in range(1_125_000, 10**10):
#     div = f(x)
#     if len(div):
#         cnt += 1
#         print(x, div[0])
#     if cnt == 5:
#         break

#
# from fnmatch import *
# for x in range(154682, 10**11, 154682):
#     if fnmatch(str(x), "*192?3*68"):
#         print(x, x//154682)

# from math import *
# def f(x):
#     deliteli = []
#     for i in range(2, isqrt(x)+1):
#         if x % i == 0:
#             deliteli += [i, x // i]
#     return deliteli
# cnt = 0
# for x in range(500_000, 10**12):
#     if cnt == 5: break
#     dev = f(x)
#     if len(dev):
#         R = sum(dev)
#         if R % 10 == 9:
#             cnt += 1
#             print(x, R)

# from math import *
# def f(x):
#     deliteli = []
#     for i in range(2, isqrt(x)+1):
#         if x % i == 0:
#             deliteli += [i, x // i]
#     l = sorted([n for n in deliteli if n % 10 == 5 and n != 5 and n != x])
#     return l
#
# cnt = 0
# for x in range(902714, 10**12):
#     if cnt == 6: break
#     div = f(x)
#     if len(div):
#         cnt += 1
#         print(x, div[0])

# from math import *
# def f(x):
#     deliteli = []
#     for i in range(2, isqrt(x)+1):
#         if x % i == 0:
#             deliteli += [i, x // i]
#     return sorted(set(deliteli))
# def Pr(x):
#     if x <= 1:
#         return False
#     for i in range(2, isqrt(x)+1):
#         if x % i == 0:
#             return False
#     return True
# cnt = 0
# for x in range(5_400_000, 10**12):
#     if cnt == 5: break
#     a = [n for n in f(x) if Pr(n) == True]
#     if len(a):
#         M = max(a) + min(a)
#         if M > 60000:
#             if str(M) == str(M)[::-1]:
#                 cnt += 1
#                 print(x, M)

# from math import *
# def Prost(x):
#     if x <= 1:
#         return False
#     for i in range(2, isqrt(x)+1):
#         if x % i == 0:
#             return False
#     return True
#
# def f(x):
#     deliteli = []
#     for i in range(2, isqrt(x)+1):
#         if x % i == 0:
#             deliteli += [i, x//i]
#     return deliteli
#
# cnt = 0
# for x in range(23_600_000, 10**10):
#     if cnt == 6: break
#     a = [j for j in f(x) if Prost(j) == True]
#     if len(a):
#         M = max(a) + min(a)
#         if M % 213 == 171:
#             cnt += 1
#             print(x, M)



