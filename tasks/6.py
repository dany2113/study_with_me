
# region üìö –®–ø–∞—Ä–≥–∞–ª–∫–∞ –ï–ì–≠ | –ó–∞–¥–∞–Ω–∏–µ ‚Ññ6

# –ó–∞–¥–∞–Ω–∏–µ ‚Ññ1:
# –ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å –ß–µ—Ä–µ–ø–∞—Ö–∞ –¥–µ–π—Å—Ç–≤—É–µ—Ç –Ω–∞ –ø–ª–æ—Å–∫–æ—Å—Ç–∏ —Å –¥–µ–∫–∞—Ä—Ç–æ–≤–æ–π —Å–∏—Å—Ç–µ–º–æ–π –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç.
# –í –Ω–∞—á–∞–ª—å–Ω—ã–π –º–æ–º–µ–Ω—Ç –ß–µ—Ä–µ–ø–∞—Ö–∞ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –Ω–∞—á–∞–ª–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç, –µ—ë –≥–æ–ª–æ–≤–∞ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∞ –≤–¥–æ–ª—å –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ–≥–æ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è
# –æ—Å–∏ –æ—Ä–¥–∏–Ω–∞—Ç, —Ö–≤–æ—Å—Ç –æ–ø—É—â–µ–Ω.
#
# –ß–µ—Ä–µ–ø–∞—Ö–µ –±—ã–ª –¥–∞–Ω –¥–ª—è –∏—Å–ø–æ–ª–Ω–µ–Ω–∏—è —Å–ª–µ–¥—É—é—â–∏–π –∞–ª–≥–æ—Ä–∏—Ç–º:
# –ù–∞–ø—Ä–∞–≤–æ 120 –ü–æ–≤—Ç–æ—Ä–∏ 8 [–í–ø–µ—Ä—ë–¥ 4 –ù–∞–ø—Ä–∞–≤–æ 60].
#
# –û–ø—Ä–µ–¥–µ–ª–∏—Ç–µ, —Å–∫–æ–ª—å–∫–æ —Ç–æ—á–µ–∫ —Å —Ü–µ–ª–æ—á–∏—Å–ª–µ–Ω–Ω—ã–º–∏ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞–º–∏ –±—É–¥—É—Ç –Ω–∞—Ö–æ–¥–∏—Ç—å—Å—è –≤–Ω—É—Ç—Ä–∏ –æ–±–ª–∞—Å—Ç–∏, –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω–æ–π –ª–∏–Ω–∏–µ–π,
# –∑–∞–¥–∞–Ω–Ω–æ–π –¥–∞–Ω–Ω—ã–º –∞–ª–≥–æ—Ä–∏—Ç–º–æ–º. –¢–æ—á–∫–∏ –Ω–∞ –ª–∏–Ω–∏–∏ —É—á–∏—Ç—ã–≤–∞—Ç—å –Ω–µ —Å–ª–µ–¥—É–µ—Ç.

# –†–µ—à–µ–Ω–∏–µ:
'''
import turtle as t
t.left(90)
t.tracer(0)
l = 30

t.right(120)
for _ in range(8):
    t.forward(4 * l)
    t.right(60)

t.up()
for x in range(-20, 20):
    for y in range(-20, 1):
        t.goto(x * l, y * l)
        t.dot('black')
t.done()
'''
import turtle

# –ó–∞–¥–∞–Ω–∏–µ ‚Ññ2:
# –ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å –ß–µ—Ä–µ–ø–∞—Ö–∞ –¥–µ–π—Å—Ç–≤—É–µ—Ç –Ω–∞ –ø–ª–æ—Å–∫–æ—Å—Ç–∏ —Å –¥–µ–∫–∞—Ä—Ç–æ–≤–æ–π —Å–∏—Å—Ç–µ–º–æ–π –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç.
# –í –Ω–∞—á–∞–ª—å–Ω—ã–π –º–æ–º–µ–Ω—Ç –ß–µ—Ä–µ–ø–∞—Ö–∞ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –Ω–∞—á–∞–ª–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç, –µ—ë –≥–æ–ª–æ–≤–∞ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∞ –≤–¥–æ–ª—å –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ–≥–æ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è –æ—Å–∏
# –æ—Ä–¥–∏–Ω–∞—Ç, —Ö–≤–æ—Å—Ç –æ–ø—É—â–µ–Ω.
#
# –ß–µ—Ä–µ–ø–∞—Ö–µ –±—ã–ª –¥–∞–Ω –¥–ª—è –∏—Å–ø–æ–ª–Ω–µ–Ω–∏—è —Å–ª–µ–¥—É—é—â–∏–π –∞–ª–≥–æ—Ä–∏—Ç–º:
# –ü–æ–≤—Ç–æ—Ä–∏ 2 [–í–ø–µ—Ä—ë–¥ 7 –ù–∞–ø—Ä–∞–≤–æ 60 –í–ø–µ—Ä—ë–¥ 12 –ù–∞–ø—Ä–∞–≤–æ 120]
# –ü–æ–¥–Ω—è—Ç—å —Ö–≤–æ—Å—Ç
# –í–ø–µ—Ä—ë–¥ 7 –ù–∞–ø—Ä–∞–≤–æ 60
# –û–ø—É—Å—Ç–∏—Ç—å —Ö–≤–æ—Å—Ç
# –ü–æ–≤—Ç–æ—Ä–∏ 2 [–í–ø–µ—Ä—ë–¥ 5 –ù–∞–ø—Ä–∞–≤–æ 120 –í–ø–µ—Ä—ë–¥ 10 –ù–∞–ø—Ä–∞–≤–æ 60]
#
# –û–ø—Ä–µ–¥–µ–ª–∏—Ç–µ, —Å–∫–æ–ª—å–∫–æ —Ç–æ—á–µ–∫ —Å —Ü–µ–ª–æ—á–∏—Å–ª–µ–Ω–Ω—ã–º–∏ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞–º–∏ –±—É–¥—É—Ç –Ω–∞—Ö–æ–¥–∏—Ç—å—Å—è –≤–Ω—É—Ç—Ä–∏ –ø–µ—Ä–µ—Å–µ—á–µ–Ω–∏—è —Ñ–∏–≥—É—Ä,
# –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω—ã—Ö –∑–∞–¥–∞–Ω–Ω—ã–º–∏ –∞–ª–≥–æ—Ä–∏—Ç–º–æ–º –ª–∏–Ω–∏—è–º–∏, –Ω–µ –≤–∫–ª—é—á–∞—è —Ç–æ—á–∫–∏ –Ω–∞ –≥—Ä–∞–Ω–∏—Ü–∞—Ö —ç—Ç–æ–≥–æ –ø–µ—Ä–µ—Å–µ—á–µ–Ω–∏—è.

# –†–µ—à–µ–Ω–∏–µ:
'''
import turtle as t
t.left(90)
t.tracer(0)
l = 30

t.color('teal')
for _ in range(2):
    t.forward(7 * l)
    t.right(60)
    t.forward(12 * l)
    t.right(120)

t.up()
t.forward(7 * l)
t.right(60)
t.down()

t.color('purple')
for _ in range(2):
    t.forward(5 * l)
    t.right(120)
    t.forward(10 * l)
    t.right(60)

t.up()
for x in range(-50, 50):
    for y in range(-50, 50):
        t.goto(x * l, y * l)
        t.dot('black')
t.done()
'''


# –ó–∞–¥–∞–Ω–∏–µ ‚Ññ3:
# –ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å –ß–µ—Ä–µ–ø–∞—Ö–∞ –¥–µ–π—Å—Ç–≤—É–µ—Ç –Ω–∞ –ø–ª–æ—Å–∫–æ—Å—Ç–∏ —Å –¥–µ–∫–∞—Ä—Ç–æ–≤–æ–π —Å–∏—Å—Ç–µ–º–æ–π –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç.
# –í –Ω–∞—á–∞–ª—å–Ω—ã–π –º–æ–º–µ–Ω—Ç –ß–µ—Ä–µ–ø–∞—Ö–∞ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –Ω–∞—á–∞–ª–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç, –µ—ë –≥–æ–ª–æ–≤–∞ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∞ –≤–¥–æ–ª—å –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ–≥–æ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è –æ—Å–∏
# –æ—Ä–¥–∏–Ω–∞—Ç, —Ö–≤–æ—Å—Ç –æ–ø—É—â–µ–Ω.
#
# –ß–µ—Ä–µ–ø–∞—Ö–µ –±—ã–ª –¥–∞–Ω –¥–ª—è –∏—Å–ø–æ–ª–Ω–µ–Ω–∏—è —Å–ª–µ–¥—É—é—â–∏–π –∞–ª–≥–æ—Ä–∏—Ç–º:
# –ü–æ–≤—Ç–æ—Ä–∏ 2 [–í–ø–µ—Ä—ë–¥ 9 –ù–∞–ø—Ä–∞–≤–æ 90 –í–ø–µ—Ä—ë–¥ 15 –ù–∞–ø—Ä–∞–≤–æ 90]
# –ü–æ–¥–Ω—è—Ç—å —Ö–≤–æ—Å—Ç
# –í–ø–µ—Ä—ë–¥ 12 –ù–∞–ø—Ä–∞–≤–æ 90
# –û–ø—É—Å—Ç–∏—Ç—å —Ö–≤–æ—Å—Ç
# –ü–æ–≤—Ç–æ—Ä–∏ 2 [–í–ø–µ—Ä—ë–¥ 6 –ù–∞–ø—Ä–∞–≤–æ 90 –í–ø–µ—Ä—ë–¥ 12 –ù–∞–ø—Ä–∞–≤–æ 90]
#
# –û–ø—Ä–µ–¥–µ–ª–∏—Ç–µ, —Å–∫–æ–ª—å–∫–æ —Ç–æ—á–µ–∫ —Å —Ü–µ–ª–æ—á–∏—Å–ª–µ–Ω–Ω—ã–º–∏ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞–º–∏ –±—É–¥—É—Ç –Ω–∞—Ö–æ–¥–∏—Ç—å—Å—è –≤–Ω—É—Ç—Ä–∏ –æ–±—ä–µ–¥–∏–Ω–µ–Ω–∏—è —Ñ–∏–≥—É—Ä,
# –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω—ã—Ö –∑–∞–¥–∞–Ω–Ω—ã–º–∏ –∞–ª–≥–æ—Ä–∏—Ç–º–æ–º –ª–∏–Ω–∏—è–º–∏, –Ω–µ –≤–∫–ª—é—á–∞—è —Ç–æ—á–∫–∏ –Ω–∞ –≥—Ä–∞–Ω–∏—Ü–∞—Ö —ç—Ç–æ–≥–æ –æ–±—ä–µ–¥–∏–Ω–µ–Ω–∏—è.

# –†–µ—à–µ–Ω–∏–µ:
'''
import turtle as t
t.left(90)
t.tracer(0)
l = 30

t.color('teal')
for _ in range(2):
    t.forward(9 * l)
    t.right(90)
    t.forward(15 * l)
    t.right(90)
t.up()
t.forward(12 * l)
t.right(90)
t.down()
t.color('purple')
for _ in range(2):
    t.forward(6 * l)
    t.right(90)
    t.forward(12 * l)
    t.right(90)

t.up()
for x in range(-30, 30):
    for y in range(-30, 30):
        t.goto(x * l, y * l)
        t.dot('black')
t.done()
'''


# üìö –ü–æ–ª–µ–∑–Ω—ã–µ —Å—Å—ã–ª–∫–∏ –Ω–∞ —Å—Ç–∞—Ç—å–∏ –∏ —Ä–∞–∑–±–æ—Ä—ã –∑–∞–¥–∞—á:
# üìò –ü–æ–ª–Ω–∞—è –≤–µ—Ä—Å–∏—è —à–ø–∞—Ä–≥–∞–ª–∫–∏ –¥–æ—Å—Ç—É–ø–Ω–∞ –≤ –Ω–∞—à–µ–º —Ç–≥ –∫–∞–Ω–∞–ª–µ: https://t.me/informatika_kege_itpy/362?comment=1424
# üìò –†–∞–∑–±–æ—Ä—ã 6 –Ω–æ–º–µ—Ä–æ–≤ –ø–æ –∏–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–µ: https://t.me/informatika_kege_itpy/360?comment=1466
# üí° –ë–∏–±–ª–∏–æ—Ç–µ–∫–∞ Turtle, —á–µ–º –º–æ–∂–µ—Ç –±—ã—Ç—å –ø–æ–ª–µ–∑–Ω–∞ –Ω–∞ –ï–ì–≠: https://t.me/informatika_kege_itpy/407
# üêç –†–∏—Å–æ–≤–∞–Ω–∏–µ –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —ç–∫—Ä–∞–Ω–æ–º –≤ Turtle: https://t.me/informatika_kege_itpy/410
# üêç –ü—è—Ç—å –ø—Ä–æ—Å—Ç–µ–π—à–∏—Ö —Ñ—É–Ω–∫—Ü–∏–π –∏–∑ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ Turtle –≤ Python: https://t.me/informatika_kege_itpy/408
# üêç –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–æ–ª–æ–∂–µ–Ω–∏–µ–º —á–µ—Ä–µ–ø–∞—Ö–∏ –Ω–∞ —ç–∫—Ä–∞–Ω–µ:  https://t.me/informatika_kege_itpy/409
# endregion (–Ω–µ —É–¥–∞–ª—è–π—Ç–µ –º–µ–Ω—è, —è —Ç—É—Ç –Ω–µ –ø—Ä–æ—Å—Ç–æ —Ç–∞–∫)


# todo: —Å—é–¥–∞ –º–æ–∂–Ω–æ –ø–∏—Å–∞—Ç—å –∑–∞–º–µ—Ç–∫–∏, —á—Ç–æ–±—ã –Ω–µ –∑–∞–±—ã—Ç—å –∑–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å —Ä–µ–ø–µ—Ç–∏—Ç–æ—Ä—É ‚òùÔ∏è
# progress_result = ()  # –°—é–¥–∞ –∑–∞–Ω–æ—Å—è—Ç—Å—è –Ω–æ–º–µ—Ä–∞, –ø—Ä–æ—Ä–µ—à–∞–Ω–Ω—ã—Ö –∑–∞–¥–∞—á.
# print('–†–µ–∫–æ–º–µ–Ω–¥—É–µ–º–æ–µ –∫–æ–ª-–≤–æ —Ä–µ—à–µ–Ω–Ω—ã—Ö –∑–∞–¥–∞—á –¥–ª—è –∑–∞–∫—Ä–µ–ø–ª–µ–Ω–∏—è –Ω–æ–º–µ—Ä–∞ 20.')
# print(f'–ü—Ä–æ–≤–µ—Ä–∏–º –ø—Ä–æ–≥—Ä–µ—Å—Å: ~{int(len(progress_result) * (100 / 20))}% –∑–∞–¥–∞—á –ø—Ä–æ—Ä–µ—à–∞–Ω–æ.')


# from turtle import *
# tracer(0)
# screensize(5000, 5000)
# r = 15
#
# for i in range(5):
#     forward(37*r); rt(90); forward(44*r); rt(90)
# up()
# back(18*r); rt(90); forward(29*r); lt(90)
# down()
# for i in range(5):
#     forward(31*r); rt(90); forward(35*r); rt(90)
# up()
#
# for x in range(-50, 50):
#     for y in range(-50, 50):
#         goto(x*r, y*r)
#         dot(3, "red")
# turtle.mainloop()
# done()

# import turtle as t
#
# t.tracer(0)
# t.screensize(5000, 5000)
# r = 50
#
# t.rt(30)
# for i in range(3):
#     t.rt(150); t.fd(6*r); t.rt(30); t.fd(12*r)
# t.up()
# for x in range(-50, 50):
#     for y in range(-50, 50):
#         t.goto(x*r, y*r)
#         t.dot(3, "red")
# t.mainloop()
# t.done()

# import turtle as t
#
# t.tracer(0)
# t.screensize(5000, 5000)
# r = 15
#
# for i in range(9):
#     t.fd(27*r); t.rt(90); t.fd(30*r); t.rt(90)
# t.up()
# t.fd(3*r); t.rt(90); t.fd(6*r); t.lt(90)
# t.down()
# for i in range(9):
#     t.fd(77*r); t.rt(90); t.fd(66*r); t.rt(90)
# t.up()
#
# for x in range(-50, 50):
#     for y in range(-50, 50):
#         t.goto(x*r,y*r)
#         t.dot(3, "red")
# t.mainloop()
# t.done()



# from turtle import *
#
# tracer(0)
# screensize(5000, 5000)
# r = 25
# for i in range(3):
#     fd(27*r); rt(90); fd(12*r); rt(90)
# up(); fd(4*r); rt(90); fd(6*r); lt(90)
# down()
# for i in range(4):
#     fd(83*r); rt(90); fd(77*r); rt(90)
# up()
#
# for x in range(-60, 100):
#     for y in range(-100, 100):
#         goto(x*r, y*r)
#         dot(3, "red")
# turtle.mainloop()
# down()
# print(28*13) 364
# print(84*78) 6552
# print((364+6552) - (7*24))
# print(1280*960*11) 13516800
# print(96468992/13516800)

# from turtle import *
#
# tracer(0)
# screensize(5000, 5000)
# r = 25
#
# for i in range(5):
#     fd(15*r); lt(90); fd(25*r); lt(90)
# up(); fd(4*r); lt(90); fd(12*r); lt(90)
# down()
# for i in range(6):
#     fd(38*r); rt(90); fd(22*r);rt(90)
# up()
#
# for x in range(-50, 50):
#     for y in range(-50, 50):
#         goto(x*r, y*r)
#         dot(3, "red")
#
# turtle.mainloop()


# from turtle import *
# tracer(0)
# screensize(5000, 5000)
# r = 25
#
# for i in range(13):
#     fd(13*r); rt(90); fd(5*r)
# up()
# rt(90); fd(7*r); lt(90); fd(10*r)
# down()
# for i in range(23):
#     fd(8*r); lt(90); fd(11*r); lt(90)
# up()
#
# for x in range(-50, 50):
#     for y in range(-50, 50):
#         goto(x * r, y * r)
#         dot(3, "red")
# turtle.mainloop()

# from turtle import *
# tracer(0)
# screensize(5000, 5000)
# r = 25
#
# for i in range(2):
#     fd(28*r); rt(90); fd(18*r); rt(90)
# up(); fd(14*r); rt(90);fd(10*r);lt(90)
# down()
# for i in range(2):
#     fd(30*r); rt(90); fd(7*r); rt(90)
# up()
#
# for x in range(-50, 50):
#     for y in range(-50, 50):
#         goto(x * r, y * r)
#         dot(3, "red")
# turtle.mainloop()

# from turtle import *
# tracer(0)
# screensize(10000, 10000)
# r = 25
#
# for i in range(3):
#     fd(10*r); rt(90); fd(15*r); rt(90)
# up(); fd(4*r); rt(90); fd(7*r); lt(90)
# down()
# for i in range(2):
#     fd(80*r); rt(90); fd(60*r); rt(90)
# up()
# for x in range(-50, 50):
#     for y in range(-50, 50):
#         goto(x * r, y * r)
#         dot(3, "red")
#
# turtle.mainloop()

# from turtle import *
# tracer(0)
# screensize(5000, 5000)
# r = 25
#
# for i in range(3):
#     fd(25*r); lt(90); fd(30*r); lt(90)
# up()
# fd(20*r); rt(90); back(7*r); lt(90)
# down()
# for i in range(3):
#     fd(60*r); rt(90); fd(30*r); rt(90)
# up()
#
# for x in range(-50, 50):
#     for y in range(-50, 50):
#         goto(x*r, y*r)
#         dot(3, "red")

# turtle.mainloop()

#
# from turtle import *
# tracer(0)
# screensize(5000, 5000)
# r = 25
#
# for i in range(6):
#     fd(7*r); rt(45); fd(4*r); rt(90); fd(4*r); rt(45)
# up()
# fd(1*r); rt(90); back(20*r)
# down()
# for i in range(5):
#     fd(24*r); lt(90); fd(6*r); lt(90)
# up()
#
# for x in range(-50, 50):
#     for y in range(-50, 50):
#         goto(x * r, y * r)
#         dot(3, "red")
#
# turtle.mainloop()

#
# from turtle import *
# tracer(0)
# screensize(5000, 5000)
# r = 25
#
# for i in range(8):
#     fd(16*r); rt(90); fd(22*r); rt(90)
# up()
# fd(5*r); rt(90); fd(5*r); lt(90)
# down()
# for i in range(8):
#     fd(52*r); rt(90); fd(77*r); rt(90)
# up()
#
# for x in range(-50, 50):
#     for y in range(-50, 50):
#         goto(x * r, y * r)
#         dot(3, "red")
#
# turtle.mainloop()

#
# from turtle import *
# tracer(0)
# screensize(5000, 5000)
# r = 15
#
# for i in range(4):
#     fd(10*r); rt(270)
# up(); fd(3*r); rt(270);fd(5*r); rt(90)
# down()
# for i in range(2):
#     fd(10*r); rt(270); fd(12*r); rt(270)
# up()
#
# for x in range(-50, 50):
#     for y in range(-50, 50):
#         goto(x * r, y * r)
#         dot(3, "red")
# turtle.mainloop()

# from turtle import *
# tracer(0)
# screensize(10000, 10000)
# r = 25
#
# for i in range(3):
#     fd(27*r); rt(90); fd(12*r); rt(90)
# up(); fd(4*r); rt(90); fd(6*r); lt(90)
# down()
# for i in range(4):
#     fd(83*r); rt(90); fd(77*r); rt(90)
# up()
#
# for x in range(-100, 100):
#     for y in range(-100, 100):
#         goto(x * r, y * r)
#         dot(3, "red")
#
# turtle.mainloop()
#
# print((28 * 12 + 84 * 77) - 24 * 6)

# from turtle import *
# tracer(0)
# screensize(5000, 5000)
# r = 25
#
# for i in range(5):
#     fd(40*r); rt(90); fd(46*r); rt(90)
# up(); fd(19*r); rt(90); fd(19*r); lt(90)
# down()
# for i in range(5):
#     fd(37*r); rt(90); fd(19*r); rt(90)
# up()
#
# for x in range(-50, 50):
#     for y in range(-50, 50):
#         goto(x*r, y*r)
#         dot(3, "red")
# turtle.mainloop()
#
# from turtle import *
# tracer(0)
# screensize(5000, 5000)
# r = 25
#
# for i in range(3):
#     fd(39*r); rt(90); fd(48*r); rt(90)
# up(); fd(27*r); rt(90); fd(24*r); lt(90)
# down()
# for i in range(3):
#     fd(29*r); rt(90); bk(18*r); rt(90)
# up()
#
# for x in range(-50, 50):
#     for y in range(-50, 50):
#         goto(x*r, y*r)
#         dot(3, "red")
#
# turtle.mainloop()


from turtle import *
tracer(0)
screensize(5000, 5000)
r = 25

for i in range(24):
    fd(10*r); rt(90); fd(5*r)
up(); lt(90); fd(7*r); rt(90)
down()
for i in range(22):
    fd(8*r); rt(90); fd(20*r); rt(90)
up()

for x in range(-50, 50):
    for y in range(-50, 50):
        goto(x*r, y*r)
        dot(3, "red")

turtle.mainloop()